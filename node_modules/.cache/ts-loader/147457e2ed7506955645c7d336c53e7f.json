{"remainingRequest":"C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\src\\api\\algorithmia.ts","dependencies":[{"path":"C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\src\\api\\algorithmia.ts","mtime":1570374016870},{"path":"C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Igor Paranhos\\\\Projects\\\\doit-marvin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n// import Algorithmia from 'algorithmia';\nvar ALGO_CLIENT_KEY = 'simBewfuobcR8HDSG7+Y9tQ2rD21';\nvar client = Algorithmia.client(ALGO_CLIENT_KEY);\nexport var getSentiment =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(phrase) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.algo('nlp/SentimentAnalysis/1.0.5').pipe({\n              document: phrase\n            });\n\n          case 2:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result.result[0].sentiment);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getSentiment(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();",{"version":3,"sources":["C:\\Users\\Igor Paranhos\\Projects\\doit-marvin\\src\\api\\algorithmia.ts"],"names":[],"mappings":";;AAAA;AAEA,IAAM,eAAe,GAAG,8BAAxB;AAUA,IAAM,MAAM,GAAG,WAAW,CAAC,MAAZ,CAAmB,eAAnB,CAAf;AAEA,OAAO,IAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,MAAM,CACtB,IADgB,CACX,6BADW,EAEhB,IAFgB,CAEX;AAAE,cAAA,QAAQ,EAAE;AAAZ,aAFW,CADG;;AAAA;AAClB,YAAA,MADkB;AAAA,6CAKjB,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,SALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZ,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["// import Algorithmia from 'algorithmia';\r\n\r\nconst ALGO_CLIENT_KEY = 'simBewfuobcR8HDSG7+Y9tQ2rD21';\r\n\r\ndeclare var Algorithmia: {\r\n    client: (apiKey: string) => {\r\n        algo: (url: string) => {\r\n            pipe: (arg: any) => any,\r\n        },\r\n    };\r\n};\r\n\r\nconst client = Algorithmia.client(ALGO_CLIENT_KEY);\r\n\r\nexport const getSentiment = async (phrase: string) => {\r\n    const result = await client\r\n        .algo('nlp/SentimentAnalysis/1.0.5')\r\n        .pipe({ document: phrase });\r\n\r\n    return result.result[0].sentiment;\r\n};\r\n"],"sourceRoot":""}]}